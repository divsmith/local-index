# CLI Interface Contracts: Optional Directory Selection

## Index Command Contract

### Command Signature
```bash
code-search index [--dir PATH] [--force] [--verbose] [--help]
```

### Parameters
| Parameter | Type | Required | Default | Description |
|-----------|------|----------|---------|-------------|
| --dir | string | Optional | "." | Directory to index (can be relative or absolute path) |
| --force | flag | Optional | false | Force reindexing even if index exists and is up-to-date |
| --verbose | flag | Optional | false | Show detailed indexing progress |
| --help | flag | Optional | false | Show command help |

### Success Responses
| Scenario | Exit Code | Output Format | Description |
|----------|-----------|---------------|-------------|
| Successful indexing | 0 | Text + JSON metadata | Index created successfully |
| Directory already indexed (no --force) | 0 | Text | No action needed, index up-to-date |
| Dry run success | 0 | Text | Would index X files (Y MB) |

### Error Responses
| Error | Exit Code | Message Format | Description |
|-------|-----------|---------------|-------------|
| Directory not found | 1 | Error: Directory 'PATH' does not exist | User-provided path invalid |
| Permission denied | 1 | Error: Permission denied accessing 'PATH' | Insufficient permissions |
| Directory too large | 1 | Error: Directory 'PATH' (X GB) exceeds limit (Y GB) | Size limit exceeded |
| Too many files | 1 | Error: Directory 'PATH' contains X files, limit is Y | File count exceeded |
| Index locked | 1 | Error: Directory 'PATH' is currently being indexed | Concurrent operation in progress |

### Examples
```bash
# Index current directory (default behavior)
code-search index

# Index specific directory
code-search index --dir /path/to/project

# Index relative directory
code-search index --dir ../my-project

# Force reindexing
code-search index --dir /path/to/project --force
```

## Search Command Contract

### Command Signature
```bash
code-search search [--dir PATH] [--max-results N] [--format json|text] [--help] QUERY
```

### Parameters
| Parameter | Type | Required | Default | Description |
|-----------|------|----------|---------|-------------|
| QUERY | string | Required | - | Search query string |
| --dir | string | Optional | "." | Directory containing index files to search |
| --max-results | integer | Optional | 50 | Maximum number of results to return |
| --format | string | Optional | "text" | Output format (json or text) |
| --help | flag | Optional | false | Show command help |

### Success Responses
| Scenario | Exit Code | Output Format | Description |
|----------|-----------|---------------|-------------|
| Found results | 0 | Text or JSON | Search results with file paths and matches |
| No results | 0 | Text | No matches found for QUERY |
| Index info | 0 | JSON | Metadata about search index (when used with special query) |

### Error Responses
| Error | Exit Code | Message Format | Description |
|-------|-----------|---------------|-------------|
| Missing query | 1 | Error: SEARCH_QUERY is required | No query provided |
| Directory not found | 1 | Error: Directory 'PATH' does not exist | Invalid directory path |
| No index found | 1 | Error: No index found in directory 'PATH' | Directory not indexed |
| Index corrupted | 1 | Error: Index files are corrupted or invalid | Index files damaged |
| Permission denied | 1 | Error: Permission denied accessing index in 'PATH' | Cannot read index files |

### Examples
```bash
# Search in current directory
code-search search "function main"

# Search in specific directory
code-search search --dir /path/to/project "TODO"

# Search with JSON output
code-search search --format json "import.*react"

# Limit results
code-search search --max-results 10 "class.*Controller"
```

## Directory Resolution Contract

### Path Processing Rules
1. **Relative paths**: Resolved against current working directory
2. **Absolute paths**: Used as-is after validation
3. **Tilde expansion**: `~` expanded to user home directory
4. **Symlinks**: Followed only within the same directory tree
5. **Path traversal**: `../` sequences resolved and validated

### Validation Checks
1. **Existence**: Directory must exist and be accessible
2. **Permissions**: Read access required for indexing, write access for index creation
3. **Type**: Path must point to a directory, not a file
4. **Safety**: Resolved path must not escape allowed boundaries

### Index Location Strategy
1. **Base directory**: User-specified or current directory
2. **Index directory**: `.clindex` subdirectory within base directory
3. **Files**: `metadata.json`, `data.index`, `lock`
4. **Isolation**: Index files kept separate from user content

## Configuration Contract

### Default Limits
| Setting | Default Value | Description |
|---------|---------------|-------------|
| max_directory_size | 1GB | Maximum total directory size |
| max_file_count | 10,000 | Maximum number of files |
| max_file_size | 100MB | Maximum individual file size |

### User Configuration
Configuration can be provided via:
1. Command-line flags (highest priority)
2. Environment variables (medium priority)
3. Configuration file (lowest priority)
4. Built-in defaults (fallback)

### Environment Variables
| Variable | Description | Default |
|----------|-------------|---------|
| `CODESEARCH_DIR` | Default directory for operations | Current working directory |
| `CODESEARCH_MAX_SIZE` | Maximum directory size | 1GB |
| `CODESEARCH_MAX_FILES` | Maximum file count | 10,000 |

---

**CLI contracts complete. Ready for test implementation.**